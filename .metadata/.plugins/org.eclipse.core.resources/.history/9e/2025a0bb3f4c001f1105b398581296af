package com.team10.services;

import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.dao.OptimisticLockingFailureException;
import org.springframework.stereotype.Service;

import com.team10.dto.DonourDTO;
import com.team10.entity.Donour;
import com.team10.repository.DonourRepository;

import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class DonourServiceImpl implements IDonourService {

	private final DonourRepository donourRepository;

	@Transactional
	@Override
	public void saveDonour(DonourDTO donourDTO)
			throws IllegalArgumentException, OptimisticLockingFailureException, DataIntegrityViolationException {
		// @formatter-off
		donourRepository.save(
				Donour.builder().user(donourDTO.getUser()).gender(donourDTO.getGender()).pinCode(donourDTO.getPinCode())
						.addressLine1(donourDTO.getAddressLine1()).addressLine2(donourDTO.getAddressLine2())
						.stateAndUTs(donourDTO.getStateAndUTs()).district(donourDTO.getDistrict()).build());
		// @formatter-on
	}

}
