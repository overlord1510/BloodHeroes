package com.team10.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.team10.customExceptions.UserNotFoundException;
import com.team10.dto.AuthenticationRequest;
import com.team10.dto.AuthenticationResponse;
import com.team10.services.IAuthenticationService;
import com.team10.services.MailServiceImpl;

import jakarta.servlet.http.HttpServletResponse;
import lombok.RequiredArgsConstructor;

@RestController
@RequiredArgsConstructor
@RequestMapping("/api/auth")
@CrossOrigin(origins = "http://localhost:5173/", allowedHeaders = "*", allowCredentials = "true")
public class AuthenticationController {

	private final IAuthenticationService iAuthenticationService;
	private final MailServiceImpl mailServiceImpl;

	@PostMapping("/authenticate")
	ResponseEntity<?> authenticate(@RequestBody AuthenticationRequest authenticationRequest,
			HttpServletResponse response) {
		System.out.println("This is " + authenticationRequest.getEmail() + authenticationRequest.getPassword());
		AuthenticationResponse auth = iAuthenticationService.authenticateAndCreateCookie(authenticationRequest,
				response);
		if (auth != null) {
			return new ResponseEntity<AuthenticationResponse>(auth, HttpStatus.OK);
		}
		return new ResponseEntity<>(HttpStatus.UNAUTHORIZED);
	}

	@GetMapping("/send-otp")
	public ResponseEntity<?> checkEmail(@RequestParam String email) {
		try {
			mailService.sendMail(email);
		} catch (UserNotFoundException e) {
			e.printStackTrace();
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
		} catch (Exception e) {
			e.printStackTrace();
			return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		return new ResponseEntity<>(HttpStatus.OK);
	}

}
