package com.team10.services;

import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.dao.OptimisticLockingFailureException;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.team10.dto.HospitalDTO;
import com.team10.entity.Hospital;
import com.team10.entity.HospitalService;
import com.team10.entity.ROLE;
import com.team10.entity.User;
import com.team10.repository.HospitalRepository;

import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class HospitalServiceImpl implements IHospitalService {

//	private final HospitalRepository hospitalRepository;
//	private final PasswordEncoder passwordEncoder;

	@Transactional
	@Override
	public void saveHospital(HospitalDTO hospitalDTO)
			throws IllegalArgumentException, OptimisticLockingFailureException, DataIntegrityViolationException {

		//@formatter:off
		hospitalRepository.save(Hospital.builder()
				.user(User.builder()
						.name(hospitalDTO.getName())
						.email(hospitalDTO.getEmail())
						.password(passwordEncoder.encode(hospitalDTO.getPassword()))
						.contacts(hospitalDTO.getContacts())
						.role(ROLE.ORGANIZATION_MANAGER)
						.isActivated(false)
						.build())
				.registrationNumber(hospitalDTO.getRegistrationNumber())
				.hospitalType(hospitalDTO.getHospitalType())
				.dateOfEstablishment(hospitalDTO.getDateOfEstablishment())
				.accreditation(hospitalDTO.getAccreditation())
				.bedCapacity(hospitalDTO.getBedCapacity())
				.hospitalService(HospitalService.builder()
						.emergencyServices(hospitalDTO.getEmergencyServices())
						.icuAvailable(hospitalDTO.getIcuAvailable())
						.ambulanceServices(hospitalDTO.getAmbulanceServices())
						.laboratoryAvailable(hospitalDTO.getLaboratoryAvailable())
						.pharmacyAvailable(hospitalDTO.getPharmacyAvailable())
						.bloodBankAvailable(hospitalDTO.getBloodBankAvailable())
						.numberOfOperatingTheaters(hospitalDTO.getNumberOfOperatingTheaters())
						.build())
				.build());
		//@formatter:on

	}
}
